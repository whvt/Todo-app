{"version":3,"sources":["context.js","ToDo/TodoItem.js","ToDo/TodoList.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","ul","listStyle","margin","TodoList","props","todos","map","onToggle","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setloading","useEffect","fetch","then","response","json","Provider","value","filter","length","Suspense","fallback","onCreate","concat","Date","now","Loader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.982396b2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../context\";\r\n\r\nconst styles = {\r\n  li: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \".5rem 1 rem\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    marginBottom: \".4rem\",\r\n  },\r\n  input: {\r\n    marginRight: \"1rem\",\r\n  },\r\n};\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n  const { removeTodo } = useContext(Context);\r\n  const classes = [];\r\n\r\n  if (todo.completed) {\r\n    classes.push(\"done\");\r\n  }\r\n\r\n  return (\r\n    <li style={styles.li}>\r\n      <span className={classes.join(\" \")}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={todo.completed}\r\n          style={styles.input}\r\n          onChange={() => onChange(todo.id)}\r\n        />\r\n        <strong>{index + 1}</strong>\r\n        &nbsp;\r\n        {todo.title}\r\n      </span>\r\n      <button className=\"rm\" onClick={() => removeTodo(todo.id)}>&times;</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst styles = {\r\n    ul:{\r\n        listStyle:'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nfunction TodoList (props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {props.todos.map((todo, index) => {\r\n                return <TodoItem todo ={todo} key={todo.id} index={index} onChange={props.onToggle}/>\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import React from \"react\";\r\n\r\nexport default () => (\r\n  <div style={{ display: \"flex\", justifyContent: \"center\", margin: \".5rem\" }}>\r\n    <div className=\"lds-dual-ring\" />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nexport default class Modal extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={() => this.setState({ isOpen: true })}>\r\n          Open modal\r\n        </button>\r\n\r\n        {this.state.isOpen && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-body\">\r\n              <h1>Modal Title</h1>\r\n              <p>I am awesome modal!</p>\r\n              <button onClick={() => this.setState({ isOpen: false })}>\r\n                Close modal\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport TodoList from \"./ToDo/TodoList\";\r\nimport Context from \"./context\";\r\nimport Loader from \"./Loader\";\r\nimport Modal from \"./Modal/Modal\";\r\n\r\nconst AddTodo = React.lazy(\r\n  () =>\r\n    new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(import(\"./ToDo/AddTodo\"));\r\n      }, 2000);\r\n    })\r\n);\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = React.useState([]);\r\n  const [loading, setloading] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=5\")\r\n      .then((response) => response.json())\r\n      .then((todos) => {\r\n        setTimeout(() => {\r\n          setTodos(todos);\r\n          setloading(false);\r\n        }, 2000);\r\n      });\r\n  }, []);\r\n\r\n  function toggleTodo(id) {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n  }\r\n\r\n  function removeTodo(id) {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  }\r\n\r\n  function addTodo(title) {\r\n    setTodos(\r\n      todos.concat([\r\n        {\r\n          title,\r\n          id: Date.now(),\r\n          completed: false,\r\n        },\r\n      ])\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={{ removeTodo }}>\r\n      <div className=\"wrapper\">\r\n        <h1>Todo app</h1>\r\n        <Modal />\r\n        {todos.length ? (\r\n          <TodoList todos={todos} onToggle={toggleTodo} />\r\n        ) : loading ? null : (\r\n          <p>No todos!</p>\r\n        )}\r\n        <React.Suspense fallback={<p>Loading...</p>}>\r\n          <AddTodo onCreate={addTodo} />\r\n        </React.Suspense>\r\n        {loading && <Loader />}\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}